//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.01.19 at 07:08:19 PM CET 
//


package sk.tuke.fei.kpi.nosal.milan.bte.metaconfiguration;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for annotationType-type complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="annotationType-type">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="skip" type="{http://kpi.fei.tuke.sk/Nosal/Milan/BTE/metaconfiguration}skip-type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="inside" type="{http://kpi.fei.tuke.sk/Nosal/Milan/BTE/metaconfiguration}inside-type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="wrapper" type="{http://kpi.fei.tuke.sk/Nosal/Milan/BTE/metaconfiguration}wrapper-type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="mapsTo" type="{http://kpi.fei.tuke.sk/Nosal/Milan/BTE/metaconfiguration}mapsTo-type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="targetElement" type="{http://kpi.fei.tuke.sk/Nosal/Milan/BTE/metaconfiguration}targetElement-type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="staticModifier" type="{http://kpi.fei.tuke.sk/Nosal/Milan/BTE/metaconfiguration}staticModifier-type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="copyBranch" type="{http://kpi.fei.tuke.sk/Nosal/Milan/BTE/metaconfiguration}copyBranch-type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="declMethod" type="{http://kpi.fei.tuke.sk/Nosal/Milan/BTE/metaconfiguration}declMethod-type" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="annotation" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "annotationType-type", propOrder = {
    "skip",
    "inside",
    "wrapper",
    "mapsTo",
    "targetElement",
    "staticModifier",
    "copyBranch",
    "declMethod"
})
public class AnnotationTypeType {

    protected List<SkipType> skip;
    protected List<InsideType> inside;
    protected List<WrapperType> wrapper;
    protected List<MapsToType> mapsTo;
    protected List<TargetElementType> targetElement;
    protected List<StaticModifierType> staticModifier;
    protected List<CopyBranchType> copyBranch;
    protected List<DeclMethodType> declMethod;
    @XmlAttribute
    protected String annotation;

    /**
     * Gets the value of the skip property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the skip property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSkip().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SkipType }
     * 
     * 
     */
    public List<SkipType> getSkip() {
        if (skip == null) {
            skip = new ArrayList<SkipType>();
        }
        return this.skip;
    }

    /**
     * Gets the value of the inside property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the inside property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInside().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link InsideType }
     * 
     * 
     */
    public List<InsideType> getInside() {
        if (inside == null) {
            inside = new ArrayList<InsideType>();
        }
        return this.inside;
    }

    /**
     * Gets the value of the wrapper property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the wrapper property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getWrapper().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link WrapperType }
     * 
     * 
     */
    public List<WrapperType> getWrapper() {
        if (wrapper == null) {
            wrapper = new ArrayList<WrapperType>();
        }
        return this.wrapper;
    }

    /**
     * Gets the value of the mapsTo property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the mapsTo property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMapsTo().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MapsToType }
     * 
     * 
     */
    public List<MapsToType> getMapsTo() {
        if (mapsTo == null) {
            mapsTo = new ArrayList<MapsToType>();
        }
        return this.mapsTo;
    }

    /**
     * Gets the value of the targetElement property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the targetElement property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTargetElement().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TargetElementType }
     * 
     * 
     */
    public List<TargetElementType> getTargetElement() {
        if (targetElement == null) {
            targetElement = new ArrayList<TargetElementType>();
        }
        return this.targetElement;
    }

    /**
     * Gets the value of the staticModifier property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the staticModifier property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getStaticModifier().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link StaticModifierType }
     * 
     * 
     */
    public List<StaticModifierType> getStaticModifier() {
        if (staticModifier == null) {
            staticModifier = new ArrayList<StaticModifierType>();
        }
        return this.staticModifier;
    }

    /**
     * Gets the value of the copyBranch property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the copyBranch property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCopyBranch().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CopyBranchType }
     * 
     * 
     */
    public List<CopyBranchType> getCopyBranch() {
        if (copyBranch == null) {
            copyBranch = new ArrayList<CopyBranchType>();
        }
        return this.copyBranch;
    }

    /**
     * Gets the value of the declMethod property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the declMethod property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDeclMethod().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DeclMethodType }
     * 
     * 
     */
    public List<DeclMethodType> getDeclMethod() {
        if (declMethod == null) {
            declMethod = new ArrayList<DeclMethodType>();
        }
        return this.declMethod;
    }

    /**
     * Gets the value of the annotation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAnnotation() {
        return annotation;
    }

    /**
     * Sets the value of the annotation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAnnotation(String value) {
        this.annotation = value;
    }

}
